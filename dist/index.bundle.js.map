{"version":3,"sources":["webpack:///webpack/bootstrap fb5fac4ca1fd2857508b","webpack:///./src/Matrix.ts","webpack:///external \"fs\"","webpack:///./src/argParser.ts","webpack:///./src/SupervisedLearner.ts","webpack:///./src/index.ts","webpack:///./src/evaluationMethods.ts","webpack:///./src/BaselineLearner.ts"],"names":[],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fb5fac4ca1fd2857508b","import * as fs from 'fs';\nimport * as readline from 'readline';\n\nexport default class Matrix {\n  // Data\n  private m_data: number[][];\n\n  // Meta-data\n  private m_attr_name: string[];\n  private m_str_to_enum: Map<string, number>[];\n  private m_enum_to_str: Map<number, string>[];\n\n  // Copies the specified portion of that matrix into this matrix\n  constructor(that?: Matrix, rowStart?: number, colStart?: number, rowCount?: number, colCount?: number) {\n    this.m_data = [];\n    this.m_attr_name = [];\n    this.m_str_to_enum = [];\n    this.m_enum_to_str = [];\n    if (that !== undefined) {\n      for (let j = 0; j < rowCount; j++) {\n        const rowSrc = that.row(rowStart + j) as number[];\n        const rowDest: number[] = [];\n        for (let i = 0; i < colCount; i++) {\n          rowDest[i] = rowSrc[colStart + i];\n        }\n        this.m_data.push(rowDest);\n      }\n      for (let i = 0; i < colCount; i++) {\n        this.m_attr_name.push(that.attrName(colStart + i));\n        this.m_str_to_enum.push(that.m_str_to_enum[colStart + i]);\n        this.m_enum_to_str.push(that.m_enum_to_str[colStart + i]);\n      }\n    }\n  }\n\n  /**\n   * Adds a copy of the specified portion of that matrix to this matrix\n   */\n  add(that: Matrix, rowStart: number, colStart: number, rowCount: number) {\n    if (colStart + this.cols() > that.cols()) {\n      throw new Error('out of range');\n    }\n    for (let i = 0; i < this.cols(); i++) {\n      if (that.valueCount(colStart + i) !== this.valueCount(i)) {\n        throw new Error('incompatible relations');\n      }\n    }\n    for (let j = 0; j < rowCount; j++) {\n      const rowSrc: number[] = that.row(rowStart + j);\n      const rowDest: number[] = [];\n      for (let i = 0; i < this.cols(); i++) {\n        rowDest[i] = rowSrc[colStart + i];\n      }\n      this.m_data.push(rowDest);\n    }\n  }\n\n  /**\n   * Resizes this matrix (and sets all attributes to be continuous)\n   * @param rows\n   * @param cols\n   */\n  setSize(rows: number, cols: number) {\n    this.m_data = [];\n    for (let j = 0; j < rows; j++) {\n      const row: number[] = [];\n      this.m_data.push(row);\n    }\n    this.m_attr_name = [];\n    this.m_str_to_enum = [];\n    this.m_enum_to_str = [];\n    for (let i = 0; i < cols; i++) {\n      this.m_attr_name.push('');\n      this.m_str_to_enum.push(new Map<string, number>());\n      this.m_enum_to_str.push(new Map<number, string>());\n    }\n  }\n\n\n  /**\n   * Loads from an ARFF file\n   */\n  public loadArff(filename: string) {\n    this.m_data = [];\n    this.m_attr_name = [];\n    this.m_str_to_enum = [];\n    this.m_enum_to_str = [];\n    let READDATA = false; // Set to true once you read a line with '@DATA'\n    fs.readFileSync(filename, 'utf-8').split('\\n').forEach((line: string) => {\n      line = line.trim();\n      if (line.length > 0 && !line.startsWith('%')) {\n        if (!READDATA) {\n          const firstToken = line.split(' ')[0].toUpperCase();\n          switch (firstToken) {\n            case '@RELATION':\n              const datasetName = line.split(' ')[1].toUpperCase();\n              break;\n            case '@ATTRIBUTE':\n              let ste = new Map<string, number>();\n              let ets = new Map<number, string>();\n              const lineFields = line.split(/\\s+/);\n              this.m_attr_name.push(lineFields[1]);\n              const type = lineFields[2].trim().toUpperCase();\n              if (type !== 'REAL' && type !== 'CONTINUOUS' && type !== 'INTEGER') {\n                try {\n                  const values = line.substring(line.indexOf('{') + 1, line.indexOf('}'))\n                    .split(',')\n                    .map(v => v.trim());\n                  values.forEach((value, i) => {\n                    if (value.length > 0) {\n                      ste.set(value, i);\n                      ets.set(i, value);\n                    }\n                  });\n                }\n                catch (e) {\n                  throw new Error(\"Error parsing line: \" + line + \"\\n\" + e.message);\n                }\n              }\n              this.m_str_to_enum.push(ste);\n              this.m_enum_to_str.push(ets);\n              break;\n            case '@DATA':\n              READDATA = true;\n              break;\n            default:\n              throw new Error('Error processing file. Expected @RELATION, @ATTRIBUTE, or @DATA. Instead got \\'' + line + '\\'.');\n          }\n        } else {\n          try {\n            const attributes = line.split(',');\n            const dataRow = attributes.map((attribute, i) => {\n              attribute = attribute.trim();\n              if (attribute.length > 0) {\n                //Missing instances appear in the dataset as undefined\n                if (attribute === '?') {\n                  return undefined;\n                } else if (this.m_enum_to_str[i].size === 0) {\n                  // Continuous values appear in the instance vector as they are\n                  return parseFloat(attribute);\n                } else {\n                  // Discrete values appear as an index to the \"name\"\n                  // of that value in the \"attributeValue\" structure\n                  const result = this.m_str_to_enum[i].get(attribute);\n                  if (result === undefined) {\n                    throw new Error(`Error parsing the value '${attribute}' on line: ${line}`);\n                  }\n                  return result;\n                }\n              } else {\n                throw new Error(`Error: attribute '${i + 1}' is missing on line: ${line}`);\n              }\n            });\n            this.m_data.push(dataRow);\n          }\n          catch (e) {\n            throw new Error('Error parsing line: ' + line + '\\n' + e.message);\n          }\n        }\n      }\n    });\n  }\n\n  /** Returns the number of rows in the matrix */\n  rows() {\n    return this.m_data.length;\n  }\n\n  /** Returns the number of columns (or attributes) in the matrix */\n  cols() {\n    return this.m_attr_name.length;\n  }\n\n  /** Returns the specified row */\n  row(r: number) {\n    return this.m_data[r];\n  }\n\n  /** Returns the element at the specified row and column */\n  get(r: number, c: number) {\n    return this.m_data[r][c];\n  }\n\n  /** Sets the value at the specified row and column */\n  set(r: number, c: number, v: number) {\n    this.row(r)[c] = v;\n  }\n\n  /** Returns the name of the specified attribute */\n  attrName(col: number) {\n    return this.m_attr_name[col];\n  }\n\n  /** Set the name of the specified attribute */\n  setAttrName(col: number, name: string) {\n    this.m_attr_name[col] = name;\n  }\n\n  /** Returns the name of the specified value */\n  attrValue(attr: number, val: number) {\n    return this.m_enum_to_str[attr].get(val) as string;\n  }\n\n  /**\n   * Returns the number of values associated with the specified attribute (or column)\n   * 0=continuous, 2=binary, 3=trinary, etc.\n  */\n  valueCount(col: number) {\n    return this.m_enum_to_str[col].size;\n  }\n\n  /**\n   * Shuffles the row order with a buddy matrix.\n   * Differs from java toolkit because it doesn't accept the java `Random`\n   * construct as the first parameter.\n   */\n  shuffle(buddy?: Matrix) {\n    for (let n = this.rows(); n > 0; n--) {\n      const i = Math.floor(Math.random() * n);\n      const tmp = this.row(n - 1);\n      this.m_data[n - 1] = this.row(i);\n      this.m_data[i] = tmp;\n      if (buddy) {\n        const tmp1 = buddy.row(n - 1);\n        buddy.m_data[n - 1] = buddy.row(i);\n        buddy.m_data[i] = tmp1;\n      }\n    }\n  }\n\n  /** Returns the mean of the specified column */\n  columnMean(col: number) {\n    let sum = 0;\n    let count = 0;\n    for (let i = 0; i < this.rows(); i++) {\n      const v = this.get(i, col);\n      if (v !== undefined) {\n        sum += v;\n        count++;\n      }\n    }\n    return sum / count;\n  }\n\n  /** Returns the min value in the specified column */\n  columnMin(col: number): number {\n    let m = undefined;\n    for (let i = 0; i < this.rows(); i++) {\n      const v = this.get(i, col);\n      if (v !== undefined) {\n        if (m === undefined || v < m)\n          m = v;\n      }\n    }\n    return m;\n  }\n\n  /** Returns the max value in the specified column */\n  columnMax(col: number) {\n    let m = undefined;\n    for (let i = 0; i < this.rows(); i++) {\n      const v = this.get(i, col);\n      if (v !== undefined) {\n        if (m === undefined || v > m)\n          m = v;\n      }\n    }\n    return m;\n  }\n\n  /** Returns the most common value in the specified column */\n  mostCommonValue(col: number) {\n    const tm = new Map<number, number>();\n    for (let i = 0; i < this.rows(); i++) {\n      const v = this.get(i, col);\n      if (v !== undefined) {\n        const count = tm.get(v);\n        if (count === undefined) {\n          tm.set(v, 1);\n        } else {\n          tm.set(v, count + 1);\n        }\n      }\n    }\n    let maxCount = 0;\n    let val = undefined;\n    tm.forEach((value: number, key: number) => {\n      if (value > maxCount) {\n        maxCount = value;\n        val = key;\n      }\n    });\n    return val;\n  }\n\n  normalize() {\n    for (let i = 0; i < this.cols(); i++) {\n      if (this.valueCount(i) === 0) {\n        const min = this.columnMin(i);\n        const max = this.columnMax(i);\n        for (let j = 0; j < this.rows(); j++) {\n          const v = this.get(j, i);\n          if (v !== undefined) {\n            this.set(j, i, (v - min) / (max - min));\n          }\n        }\n      }\n    }\n  }\n\n  print() {\n    console.log('@RELATION Untitled\\n');\n    for (let i = 0; i < this.m_attr_name.length; i++) {\n      console.log('@ATTRIBUTE ' + this.m_attr_name[i]);\n      const vals = this.valueCount(i);\n      if (vals === 0) {\n        console.log(' CONTINUOUS\\n');\n      } else {\n        console.log(' {');\n        for (let j = 0; j < vals; j++) {\n          if (j > 0) {\n            console.log(', ');\n          }\n          console.log(this.m_enum_to_str[i].get(j));\n        }\n        console.log('}\\n');\n      }\n    }\n    console.log('@DATA\\n');\n    for (let i = 0; i < this.rows(); i++) {\n      const r = this.row(i);\n      for (let j = 0; j < r.length; j++) {\n        if (j > 0) {\n          console.log(', ');\n        }\n        if (this.valueCount(j) === 0) {\n          console.log(r[j]);\n        } else {\n          console.log(this.m_enum_to_str[j].get(r[j]));\n        }\n      }\n      console.log('\\n');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Matrix.ts","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 1\n// module chunks = 0","import * as fs from 'fs';\nimport * as readline from 'readline';\n\n/**\n * Prints help information and commandline usage\n */\nfunction printUsage() {\n  console.log('Usage:');\n  console.log('    malt -L [learningAlgorithm] -A [ARFF_File] -E [evaluationMethod] {[extraParameters]} [OPTIONS]\\n');\n  console.log('OPTIONS:');\n  console.log('    -V Print the confusion matrix and learner accuracy on individual class values');\n  console.log('    -N Use normalized data');\n  console.log();\n  console.log('Possible evaluation methods are:');\n  console.log('    MLSystemManager -L [learningAlgorithm] -A [ARFF_File] -E training');\n  console.log('    MLSystemManager -L [learningAlgorithm] -A [ARFF_File] -E static [testARFF_File]');\n  console.log('    MLSystemManager -L [learningAlgorithm] -A [ARFF_File] -E random [%_ForTraining]');\n  console.log('    MLSystemManager -L [learningAlgorithm] -A [ARFF_File] -E cross [numOfFolds]\\n');\n}\n\n/**\n * Processes command line arguments. Exits if args are invalid.\n */\nexport function parseArgs() {\n  const args = process.argv.slice(2);\n  if (args.length === 0) {\n    printUsage();\n    process.exit();\n  }\n  let result = {\n    fileName: '',\n    learnerName: '',\n    evalMethod: '',\n    evalParameter: '',\n    verbose: false,\n    normalize: false,\n  }\n  for (let i = 0; i < args.length; i++) {\n    switch (args[i]) {\n      case '-V':\n        result.verbose = true;\n        break;\n      case '-N':\n        result.normalize = true;\n        break;\n      case '-L':\n        if (i + 1 !== args.length) {\n          result.learnerName = args[++i];\n        } else {\n          console.log('missing learning type. Exiting...')\n          process.exit();\n        }\n        break;\n      case '-A':\n        if (i + 1 !== args.length) {\n          result.fileName = args[++i];\n          if (!fs.existsSync(result.fileName)) {\n            console.log('arff file does not exist. Exiting...')\n            process.exit();\n          }\n        } else {\n          console.log('missing arff file. Exiting...')\n          process.exit();\n        }\n        break;\n      case '-E':\n        if (i + 1 !== args.length) {\n          result.evalMethod = args[++i];\n          if (result.evalMethod === 'static' ||\n            result.evalMethod === 'random' ||\n            result.evalMethod === 'cross') {\n            if (i + 1 !== args.length) {\n              result.evalParameter = args[++i];\n            } else {\n              console.log('missing eval parameter. Exiting...')\n              process.exit();\n            }\n          } else if (result.evalMethod !== 'training') {\n            console.log('Invalid Evaluation Method: ' + result.evalMethod);\n            process.exit();\n          }\n        } else {\n          console.log('Evaluation method missing. Exiting...')\n          process.exit();\n        }\n        break;\n      default:\n        printUsage();\n        process.exit();\n    }\n  }\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/argParser.ts","import Matrix from './Matrix';\n\n\nexport default abstract class SupervisedLearner {\n\n  /**\n   * Before you call this method, you need to divide your data\n   * into a feature matrix and a label matrix.\n   * @param features\n   * @param labels\n   */\n  abstract train(features: Matrix, labels: Matrix): void;\n\n  /**\n   * A feature vector goes in. A label vector comes out. (Some supervised\n   * learning algorithms only support one-dimensional label vectors. Some\n   * support multi-dimensional label vectors.)\n   * @param features\n   * @param labels\n   */\n  abstract predict(features: number[], labels: number[]): void;\n\n  /**\n   * The model must be trained before you call this method. If the label is nominal,\n   * it returns the predictive accuracy. If the label is continuous, it returns\n   * the root mean squared error (RMSE). If confusion is non-NULL, and the\n   * output label is nominal, then confusion will hold stats for a confusion matrix.\n   * @param features\n   * @param labels\n   * @param confusion\n   */\n  measureAccuracy(features: Matrix, labels: Matrix, confusion: Matrix) {\n    if (features.rows() !== labels.rows()) {\n      throw (new Error(\"Expected the features and labels to have the same number of rows\"));\n    }\n    if (labels.cols() !== 1) {\n      throw (new Error(\"Sorry, this method currently only supports one-dimensional labels\"));\n    }\n    if (features.rows() === 0) {\n      throw (new Error(\"Expected at least one row\"));\n    }\n    const labelValues = labels.valueCount(0);\n    if (labelValues === 0) { // If the label is continuous...\n      // The label is continuous, so measure root mean squared error\n      const pred = [1];\n      let sse = 0;\n      for (let i = 0; i < features.rows(); i++) {\n        const feat = features.row(i) as number[];\n        const targ = labels.row(i) as number[];\n        pred[0] = 0; // make sure the prediction is not biassed by a previous prediction\n        this.predict(feat, pred);\n        const delta = targ[0] - pred[0];\n        sse += (delta * delta);\n      }\n      return Math.sqrt(sse / features.rows());\n    }\n    else {\n      // The label is nominal, so measure predictive accuracy\n      if (confusion !== undefined) {\n        confusion.setSize(labelValues, labelValues);\n        for (let i = 0; i < labelValues; i++) {\n          confusion.setAttrName(i, labels.attrValue(0, i));\n        }\n      }\n      let correctCount = 0;\n      const prediction = [];\n      for (let i = 0; i < features.rows(); i++) {\n        const feat = features.row(i);\n        const targ = labels.get(i, 0);\n        if (targ >= labelValues) {\n          throw new Error(\"The label is out of range\");\n        }\n        this.predict(feat, prediction);\n        const pred = prediction[0] as number;\n        if (confusion !== undefined) {\n          confusion.set(targ, pred, confusion.get(targ, pred) + 1);\n        }\n        if (pred === targ) {\n          correctCount++;\n        }\n      }\n      return correctCount / features.rows();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/SupervisedLearner.ts","import SupervisedLearner from './SupervisedLearner';\nimport Matrix from './Matrix';\nimport { parseArgs } from './argParser';\nimport { trainingEval, staticEval, randomEval, crossEval } from './evaluationMethods';\n\nexport { default as BaselineLearner } from './BaselineLearner';\nexport { default as SupervisedLearner } from './SupervisedLearner';\nexport { default as Matrix } from './Matrix';\nexport { parseArgs } from './argParser';\n/**\n * Runs a machine learning algorithm\n */\nexport function run(learner: SupervisedLearner) {\n  //Parse the command line arguments\n  const {\n    learnerName,\n    fileName,\n    evalMethod,\n    normalize,\n    evalParameter,\n    verbose\n  } = parseArgs();\n\n  // Load the ARFF file\n  const data = new Matrix();\n  data.loadArff(fileName);\n  if (normalize) {\n    console.log('Using normalized data\\n');\n    data.normalize();\n  }\n\n  // Print some stats\n  console.log('');\n  console.log('Dataset name: ' + fileName);\n  console.log('Number of instances: ' + data.rows());\n  console.log('Number of attributes: ' + data.cols());\n  console.log('Learning algorithm: ' + learnerName);\n  console.log('Evaluation method: ' + evalMethod);\n  console.log('');\n\n  switch (evalMethod) {\n    case 'training':\n      trainingEval(data, learner, verbose);\n      break;\n    case 'static':\n      staticEval(data, learner, evalParameter, normalize, verbose);\n      break;\n    case 'random':\n      randomEval(data, learner, evalParameter, verbose);\n      break;\n    case 'cross':\n      crossEval(data, learner, evalParameter);\n      break;\n    default:\n      throw new Error('The arg parser must have a bug. Please submit a PR');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import SupervisedLearner from './SupervisedLearner';\nimport Matrix from './Matrix';\n\nexport function trainingEval(data: Matrix, learner: SupervisedLearner, verbose: boolean) {\n  console.log('Calculating accuracy on training set...');\n  // Copy all ARFF data except the last column into a new 'features' matrix.\n  const features: Matrix = new Matrix(data, 0, 0, data.rows(), data.cols() - 1);\n  // Copy the last column in the ARFF data into a labels matrix.\n  const labels = new Matrix(data, 0, data.cols() - 1, data.rows(), 1);\n  const confusion = new Matrix();\n  const startTime = Date.now();\n  learner.train(features, labels);\n  const elapsedTime = Date.now() - startTime;\n  console.log('Time to train (in seconds): ' + elapsedTime / 1000.0);\n  const accuracy = learner.measureAccuracy(features, labels, confusion);\n  console.log('Training set accuracy: ' + accuracy);\n  if (verbose) {\n    console.log('\\nConfusion matrix: (Row=target value, Col=predicted value)');\n    confusion.print();\n    console.log('\\n');\n  }\n}\n\nexport function staticEval(data: Matrix,\n  learner: SupervisedLearner,\n  testFileName: string,\n  normalize: boolean,\n  verbose: boolean) {\n  const testData = new Matrix();\n  testData.loadArff(testFileName);\n  if (normalize) {\n    testData.normalize(); // BUG! This may normalize differently from the training data. It should use the same ranges for normalization!\n  }\n  console.log('Calculating accuracy on separate test set...');\n  console.log('Test set name: ' + testFileName);\n  console.log('Number of test instances: ' + testData.rows());\n  const features = new Matrix(data, 0, 0, data.rows(), data.cols() - 1);\n  const labels = new Matrix(data, 0, data.cols() - 1, data.rows(), 1);\n  const startTime = Date.now();\n  learner.train(features, labels);\n  const elapsedTime = Date.now() - startTime;\n  console.log('Time to train (in seconds): ' + elapsedTime / 1000.0);\n  const trainAccuracy = learner.measureAccuracy(features, labels, null);\n  console.log('Training set accuracy: ' + trainAccuracy);\n  const testFeatures = new Matrix(testData, 0, 0, testData.rows(), testData.cols() - 1);\n  const testLabels = new Matrix(testData, 0, testData.cols() - 1, testData.rows(), 1);\n  const confusion = new Matrix();\n  const testAccuracy = learner.measureAccuracy(testFeatures, testLabels, confusion);\n  console.log('Test set accuracy: ' + testAccuracy);\n  if (verbose) {\n    console.log('\\nConfusion matrix: (Row=target value, Col=predicted value)');\n    confusion.print();\n    console.log('\\n');\n  }\n}\n\nexport function randomEval(data: Matrix, learner: SupervisedLearner, evalParameter: string, verbose: boolean) {\n  console.log('Calculating accuracy on a random hold-out set...');\n  const trainPercent = parseFloat(evalParameter);\n  if (trainPercent < 0 || trainPercent > 1)\n    throw new Error('Percentage for random evaluation must be between 0 and 1');\n  console.log('Percentage used for training: ' + trainPercent);\n  console.log('Percentage used for testing: ' + (1 - trainPercent));\n  data.shuffle();\n  const trainSize: number = Math.floor(trainPercent * data.rows());\n  const trainFeatures = new Matrix(data, 0, 0, trainSize, data.cols() - 1);\n  const trainLabels = new Matrix(data, 0, data.cols() - 1, trainSize, 1);\n  const testFeatures = new Matrix(data, trainSize, 0, data.rows() - trainSize, data.cols() - 1);\n  const testLabels = new Matrix(data, trainSize, data.cols() - 1, data.rows() - trainSize, 1);\n  const startTime = Date.now();\n  learner.train(trainFeatures, trainLabels);\n  const elapsedTime = Date.now() - startTime;\n  console.log('Time to train (in seconds): ' + elapsedTime / 1000.0);\n  const trainAccuracy = learner.measureAccuracy(trainFeatures, trainLabels, null);\n  console.log('Training set accuracy: ' + trainAccuracy);\n  const confusion = new Matrix();\n  const testAccuracy = learner.measureAccuracy(testFeatures, testLabels, confusion);\n  console.log('Test set accuracy: ' + testAccuracy);\n  if (verbose) {\n    console.log('\\nConfusion matrix: (Row=target value, Col=predicted value)');\n    confusion.print();\n    console.log('\\n');\n  }\n}\n\nexport function crossEval(data: Matrix, learner: SupervisedLearner, evalParameter: string) {\n  console.log('Calculating accuracy using cross-validation...');\n  const folds = parseInt(evalParameter, 10);\n  if (folds <= 0)\n    throw new Error('Number of folds must be greater than 0');\n  console.log('Number of folds: ' + folds);\n  const reps: number = 1;\n  let sumAccuracy: number = 0;\n  let elapsedTime: number = 0;\n  for (let j = 0; j < reps; j++) {\n    data.shuffle();\n    for (let i = 0; i < folds; i++) {\n      const begin = i * data.rows() / folds;\n      const end = (i + 1) * data.rows() / folds;\n      const trainFeatures = new Matrix(data, 0, 0, begin, data.cols() - 1);\n      const trainLabels = new Matrix(data, 0, data.cols() - 1, begin, 1);\n      const testFeatures = new Matrix(data, begin, 0, end - begin, data.cols() - 1);\n      const testLabels = new Matrix(data, begin, data.cols() - 1, end - begin, 1);\n      trainFeatures.add(data, end, 0, data.rows() - end);\n      trainLabels.add(data, end, data.cols() - 1, data.rows() - end);\n      const startTime = Date.now();\n      learner.train(trainFeatures, trainLabels);\n      elapsedTime += Date.now() - startTime;\n      const accuracy = learner.measureAccuracy(testFeatures, testLabels, null);\n      sumAccuracy += accuracy;\n      console.log('Rep=' + j + ', Fold=' + i + ', Accuracy=' + accuracy);\n    }\n  }\n  elapsedTime /= (reps * folds);\n  console.log('Average time to train (in seconds): ' + elapsedTime / 1000.0);\n  console.log('Mean accuracy=' + (sumAccuracy / (reps * folds)));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/evaluationMethods.ts","import SupervisedLearner from './SupervisedLearner';\nimport Matrix from './Matrix';\n\n/**\n * For nominal labels, this model simply returns the majority class. For\n * continuous labels, it returns the mean value.\n * If the learning model you're using doesn't do as well as this one,\n * it's time to find a new learning model.\n */\nexport default class BaselineLearner extends SupervisedLearner {\n\n  private m_labels: number[];\n\n  train(features: Matrix, labels: Matrix) {\n    this.m_labels = [];\n    for (let i = 0; i < labels.cols(); i++) {\n      if (labels.valueCount(i) === 0)\n        this.m_labels[i] = labels.columnMean(i); // continuous\n      else\n        this.m_labels[i] = labels.mostCommonValue(i); // nominal\n    }\n  }\n\n\tpredict(features: number[], labels: number[]) {\n    for (let i = 0; i < this.m_labels.length; i++) {\n      labels[i] = this.m_labels[i];\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/BaselineLearner.ts"],"sourceRoot":""}